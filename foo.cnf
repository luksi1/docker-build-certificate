# ASN1 object configuration module
# Allow a user to specifiy a custom OID
oid_section = OIDs

[ ca ]
default_ca = CA_default

[ crl_ext ]
authorityKeyIdentifier=keyid

[ CA_default ]
# directories
dir = /ssl
certs = $dir/certs
crl_dir = $dir/crl
new_certs_dir = $dir/newcerts
database = $dir/index.txt
serial = $dir/serial

# certificate request list information
crlnumber = $dir/crlnumber
crl = $dir/crl/ca.crl
crl_extentions = crl_ext
default_crl_days = 1

# Days
default_days = 1

# Allow issueing a certificate with the same common name
# This can be useful in the case that a certificate needs to be
# renewed
unique_subject = no
default_md = sha256

# this is hardcoded in the image for the root-certificate builder
# this way we can use the same configuration for the root, intermediate, and server
# certifiicates

policy = policy_loose


# ASN1 object configuration module
# Allow a user to specifiy a custom OID

[ OIDs ]
foo=1.2.3.45

# used for the certificate authority
[ policy_strict ]
commonName = supplied
stateOrProvinceName = match
organizationName = match
countryName = match
emailAddress = optional
localityName = optional
organizationalUnitName = optional

# used for the server certificates
[ policy_loose ]
commonName = supplied
stateOrProvinceName = optional
organizationName = optional
localityName = optional
countryName = optional
emailAddress = optional
organizationalUnitName = optional
foo = supplied

[ req ]
# Options for the `req` tool (`man req`).
default_bits        = 2048
distinguished_name  = req_distinguished_name
string_mask         = utf8only
prompt              = no
default_md          = sha256

# Extension to add when the -x509 option is used.
x509_extensions     = v3_ca

[ req_distinguished_name ]
countryName                     = Country Name (2 letter code)
stateOrProvinceName             = State or Province Name
localityName                    = Locality Name
0.organizationName              = Organization Name
organizationalUnitName          = Organizational Unit Name
commonName                      = Common Name
emailAddress                    = Email Address

[ v3_ca ]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:1
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ server_cert ]
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth,clientAuth

# certificate request list extentions
[ crl_ext ]
authorityKeyIdentifier=keyid:always

# extensions for OSCP signing certificates
[ ocsp ]
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning

