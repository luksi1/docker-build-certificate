#!/bin/sh

if [[ ! -f /export/private/root.key ]]; then
  echo "You need to have the root's RSA key in /export/private/root.key"
  exit 1
fi

if [[ ! -f /export/certs/root.crt ]]; then
  echo "You need to have the root's public certificate in /export/private/root.crt"
  exit 1
fi

mkdir -p /ssl/certs /ssl/crl /ssl/newcerts /ssl/private /ssl/csr /export/crl

chmod 700 /ssl/private
touch /ssl/index.txt
echo 1000 > /ssl/serial
echo 1000 > /ssl/crlnumber

# Create our key
openssl genrsa -aes256 \
  -out /export/private/intermediate.key -passout pass:{{ getenv "INTERMEDIATE_KEY_PASSWORD" }} 4096

# Fix permissions
chmod 400 /export/private/intermediate.key

# Create a certificate signing request
openssl req -config /ssl/openssl.cnf -new -sha256 \
  -key /export/private/intermediate.key \
  -out /ssl/csr/intermediate.csr \
  -subj "{{ getenv "INTERMEDIATE_SUBJECT" }}" \
  -passin pass:{{ getenv "INTERMEDIATE_KEY_PASSWORD" }}


# Sign the CSR
openssl ca -batch -config /ssl/openssl.cnf -extensions v3_intermediate_ca \
  -days {{ getenv "INTERMEDIATE_CERT_EXPIRATION_DAYS" }} -notext -md sha256 \
  -in /ssl/csr/intermediate.csr \
  -out /export/certs/intermediate.crt \
  -keyfile /export/private/root.key \
  -cert /export/certs/root.crt \
  -key {{ getenv "ROOT_KEY_PASSWORD" }}
#  -passin pass:{{ getenv "ROOT_KEY_PASSWORD" }}

# Fix permissions
chmod 444 /export/certs/intermediate.crt

# Create certificate revocation list
openssl ca -batch -config /ssl/openssl.cnf \
  -keyfile /export/private/intermediate.key \
  -key {{ getenv "INTERMEDIATE_KEY_PASSWORD" }} \
  -cert /export/certs/intermediate.crt \
  -gencrl -out /export/crl/intermediate.crl \

# Create the chained certificate file
cat /export/certs/root.crt \
      /export/certs/intermediate.crt > /export/certs/ca-chain.crt

# Fix permssions
chmod 444 /export/certs/ca-chain.crt
